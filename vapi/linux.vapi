/* linux.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Linux", gir_namespace = "Linux", lower_case_cprefix = "linux_")]
namespace Linux {
	[CCode (cheader_filename = "linux.h", cname = "prctl_mm_map", has_type_id = false)]
	public struct prctl_mm_map {
	}
	[CCode (cheader_filename = "linux.h", cname = "seccomp_data", has_type_id = false)]
	public struct seccomp_data {
		public int nr;
	}
	[CCode (cheader_filename = "linux.h", cname = "seccomp_notif", has_type_id = false)]
	public struct seccomp_notif {
		public void* data;
	}
	[CCode (cheader_filename = "linux.h", cname = "seccomp_notif_addfd", has_type_id = false)]
	public struct seccomp_notif_addfd {
	}
	[CCode (cheader_filename = "linux.h", cname = "seccomp_notif_resp", has_type_id = false)]
	public struct seccomp_notif_resp {
	}
	[CCode (cheader_filename = "linux.h", cname = "seccomp_notif_sizes", has_type_id = false)]
	public struct seccomp_notif_sizes {
	}
	[CCode (cheader_filename = "linux.h", cname = "sock_filter", has_type_id = false)]
	public struct sock_filter {
        public uint16 code;
        public uint8 jt;
        public uint8 jf;
        public uint32 k;
	}
	[CCode (cheader_filename = "linux.h", cname = "sock_fprog", has_type_id = false)]
	public struct sock_fprog {
		public ushort len;
		public void* filter;
	}
	[CCode (cheader_filename = "linux.h", cname = "arch_nr")]
	public const int arch_nr;
	[CCode (cheader_filename = "linux.h", cname = "ARCH_NR")]
	public const int ARCH_NR;
	[CCode (cheader_filename = "linux.h", cname = "BPF_A")]
	public const int BPF_A;
	[CCode (cheader_filename = "linux.h", cname = "BPF_ABS")]
	public const int BPF_ABS;
	[CCode (cheader_filename = "linux.h", cname = "BPF_ADD")]
	public const int BPF_ADD;
	[CCode (cheader_filename = "linux.h", cname = "BPF_ALU")]
	public const int BPF_ALU;
	[CCode (cheader_filename = "linux.h", cname = "BPF_AND")]
	public const int BPF_AND;
	[CCode (cheader_filename = "linux.h", cname = "BPF_B")]
	public const int BPF_B;
	[CCode (cheader_filename = "linux.h", cname = "BPF_DIV")]
	public const int BPF_DIV;
	[CCode (cheader_filename = "linux.h", cname = "BPF_H")]
	public const int BPF_H;
	[CCode (cheader_filename = "linux.h", cname = "BPF_IMM")]
	public const int BPF_IMM;
	[CCode (cheader_filename = "linux.h", cname = "BPF_IND")]
	public const int BPF_IND;
	[CCode (cheader_filename = "linux.h", cname = "BPF_JA")]
	public const int BPF_JA;
	[CCode (cheader_filename = "linux.h", cname = "BPF_JEQ")]
	public const int BPF_JEQ;
	[CCode (cheader_filename = "linux.h", cname = "BPF_JGE")]
	public const int BPF_JGE;
	[CCode (cheader_filename = "linux.h", cname = "BPF_JGT")]
	public const int BPF_JGT;
	[CCode (cheader_filename = "linux.h", cname = "BPF_JMP")]
	public const int BPF_JMP;
	[CCode (cheader_filename = "linux.h", cname = "BPF_JSET")]
	public const int BPF_JSET;
	[CCode (cheader_filename = "linux.h", cname = "BPF_K")]
	public const int BPF_K;
	[CCode (cheader_filename = "linux.h", cname = "BPF_LD")]
	public const int BPF_LD;
	[CCode (cheader_filename = "linux.h", cname = "BPF_LDX")]
	public const int BPF_LDX;
	[CCode (cheader_filename = "linux.h", cname = "BPF_LEN")]
	public const int BPF_LEN;
	[CCode (cheader_filename = "linux.h", cname = "BPF_LSH")]
	public const int BPF_LSH;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MAJOR_VERSION")]
	public const int BPF_MAJOR_VERSION;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MAXINSNS")]
	public const int BPF_MAXINSNS;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MEM")]
	public const int BPF_MEM;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MEMWORDS")]
	public const int BPF_MEMWORDS;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MINOR_VERSION")]
	public const int BPF_MINOR_VERSION;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MISC")]
	public const int BPF_MISC;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MOD")]
	public const int BPF_MOD;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MSH")]
	public const int BPF_MSH;
	[CCode (cheader_filename = "linux.h", cname = "BPF_MUL")]
	public const int BPF_MUL;
	[CCode (cheader_filename = "linux.h", cname = "BPF_NEG")]
	public const int BPF_NEG;
	[CCode (cheader_filename = "linux.h", cname = "BPF_OR")]
	public const int BPF_OR;
	[CCode (cheader_filename = "linux.h", cname = "BPF_RET")]
	public const int BPF_RET;
	[CCode (cheader_filename = "linux.h", cname = "BPF_RSH")]
	public const int BPF_RSH;
	[CCode (cheader_filename = "linux.h", cname = "BPF_ST")]
	public const int BPF_ST;
	[CCode (cheader_filename = "linux.h", cname = "BPF_STX")]
	public const int BPF_STX;
	[CCode (cheader_filename = "linux.h", cname = "BPF_SUB")]
	public const int BPF_SUB;
	[CCode (cheader_filename = "linux.h", cname = "BPF_TAX")]
	public const int BPF_TAX;
	[CCode (cheader_filename = "linux.h", cname = "BPF_TXA")]
	public const int BPF_TXA;
	[CCode (cheader_filename = "linux.h", cname = "BPF_W")]
	public const int BPF_W;
	[CCode (cheader_filename = "linux.h", cname = "BPF_X")]
	public const int BPF_X;
	[CCode (cheader_filename = "linux.h", cname = "BPF_XOR")]
	public const int BPF_XOR;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAPBSET_DROP")]
	public const int PR_CAPBSET_DROP;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAPBSET_READ")]
	public const int PR_CAPBSET_READ;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAP_AMBIENT")]
	public const int PR_CAP_AMBIENT;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAP_AMBIENT_CLEAR_ALL")]
	public const int PR_CAP_AMBIENT_CLEAR_ALL;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAP_AMBIENT_IS_SET")]
	public const int PR_CAP_AMBIENT_IS_SET;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAP_AMBIENT_LOWER")]
	public const int PR_CAP_AMBIENT_LOWER;
	[CCode (cheader_filename = "linux.h", cname = "PR_CAP_AMBIENT_RAISE")]
	public const int PR_CAP_AMBIENT_RAISE;
	[CCode (cheader_filename = "linux.h", cname = "PR_ENDIAN_BIG")]
	public const int PR_ENDIAN_BIG;
	[CCode (cheader_filename = "linux.h", cname = "PR_ENDIAN_LITTLE")]
	public const int PR_ENDIAN_LITTLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_ENDIAN_PPC_LITTLE")]
	public const int PR_ENDIAN_PPC_LITTLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_FPEMU_NOPRINT")]
	public const int PR_FPEMU_NOPRINT;
	[CCode (cheader_filename = "linux.h", cname = "PR_FPEMU_SIGFPE")]
	public const int PR_FPEMU_SIGFPE;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_ASYNC")]
	public const int PR_FP_EXC_ASYNC;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_DISABLED")]
	public const int PR_FP_EXC_DISABLED;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_DIV")]
	public const int PR_FP_EXC_DIV;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_INV")]
	public const int PR_FP_EXC_INV;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_NONRECOV")]
	public const int PR_FP_EXC_NONRECOV;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_OVF")]
	public const int PR_FP_EXC_OVF;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_PRECISE")]
	public const int PR_FP_EXC_PRECISE;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_RES")]
	public const int PR_FP_EXC_RES;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_SW_ENABLE")]
	public const int PR_FP_EXC_SW_ENABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_EXC_UND")]
	public const int PR_FP_EXC_UND;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_MODE_FR")]
	public const int PR_FP_MODE_FR;
	[CCode (cheader_filename = "linux.h", cname = "PR_FP_MODE_FRE")]
	public const int PR_FP_MODE_FRE;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_CHILD_SUBREAPER")]
	public const int PR_GET_CHILD_SUBREAPER;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_DUMPABLE")]
	public const int PR_GET_DUMPABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_ENDIAN")]
	public const int PR_GET_ENDIAN;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_FPEMU")]
	public const int PR_GET_FPEMU;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_FPEXC")]
	public const int PR_GET_FPEXC;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_FP_MODE")]
	public const int PR_GET_FP_MODE;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_IO_FLUSHER")]
	public const int PR_GET_IO_FLUSHER;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_KEEPCAPS")]
	public const int PR_GET_KEEPCAPS;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_NAME")]
	public const int PR_GET_NAME;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_NO_NEW_PRIVS")]
	public const int PR_GET_NO_NEW_PRIVS;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_PDEATHSIG")]
	public const int PR_GET_PDEATHSIG;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_SECCOMP")]
	public const int PR_GET_SECCOMP;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_SECUREBITS")]
	public const int PR_GET_SECUREBITS;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_SPECULATION_CTRL")]
	public const int PR_GET_SPECULATION_CTRL;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_TAGGED_ADDR_CTRL")]
	public const int PR_GET_TAGGED_ADDR_CTRL;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_THP_DISABLE")]
	public const int PR_GET_THP_DISABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_TID_ADDRESS")]
	public const int PR_GET_TID_ADDRESS;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_TIMERSLACK")]
	public const int PR_GET_TIMERSLACK;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_TIMING")]
	public const int PR_GET_TIMING;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_TSC")]
	public const int PR_GET_TSC;
	[CCode (cheader_filename = "linux.h", cname = "PR_GET_UNALIGN")]
	public const int PR_GET_UNALIGN;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL")]
	public const int PR_MCE_KILL;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL_CLEAR")]
	public const int PR_MCE_KILL_CLEAR;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL_DEFAULT")]
	public const int PR_MCE_KILL_DEFAULT;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL_EARLY")]
	public const int PR_MCE_KILL_EARLY;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL_GET")]
	public const int PR_MCE_KILL_GET;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL_LATE")]
	public const int PR_MCE_KILL_LATE;
	[CCode (cheader_filename = "linux.h", cname = "PR_MCE_KILL_SET")]
	public const int PR_MCE_KILL_SET;
	[CCode (cheader_filename = "linux.h", cname = "PR_MPX_DISABLE_MANAGEMENT")]
	public const int PR_MPX_DISABLE_MANAGEMENT;
	[CCode (cheader_filename = "linux.h", cname = "PR_MPX_ENABLE_MANAGEMENT")]
	public const int PR_MPX_ENABLE_MANAGEMENT;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TAG_MASK")]
	public const int PR_MTE_TAG_MASK;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TAG_SHIFT")]
	public const int PR_MTE_TAG_SHIFT;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TCF_ASYNC")]
	public const int PR_MTE_TCF_ASYNC;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TCF_MASK")]
	public const int PR_MTE_TCF_MASK;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TCF_NONE")]
	public const int PR_MTE_TCF_NONE;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TCF_SHIFT")]
	public const int PR_MTE_TCF_SHIFT;
	[CCode (cheader_filename = "linux.h", cname = "PR_MTE_TCF_SYNC")]
	public const int PR_MTE_TCF_SYNC;
	[CCode (cheader_filename = "linux.h", cname = "PR_PAC_APDAKEY")]
	public const int PR_PAC_APDAKEY;
	[CCode (cheader_filename = "linux.h", cname = "PR_PAC_APDBKEY")]
	public const int PR_PAC_APDBKEY;
	[CCode (cheader_filename = "linux.h", cname = "PR_PAC_APGAKEY")]
	public const int PR_PAC_APGAKEY;
	[CCode (cheader_filename = "linux.h", cname = "PR_PAC_APIAKEY")]
	public const int PR_PAC_APIAKEY;
	[CCode (cheader_filename = "linux.h", cname = "PR_PAC_APIBKEY")]
	public const int PR_PAC_APIBKEY;
	[CCode (cheader_filename = "linux.h", cname = "PR_PAC_RESET_KEYS")]
	public const int PR_PAC_RESET_KEYS;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_CHILD_SUBREAPER")]
	public const int PR_SET_CHILD_SUBREAPER;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_DUMPABLE")]
	public const int PR_SET_DUMPABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_ENDIAN")]
	public const int PR_SET_ENDIAN;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_FPEMU")]
	public const int PR_SET_FPEMU;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_FPEXC")]
	public const int PR_SET_FPEXC;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_FP_MODE")]
	public const int PR_SET_FP_MODE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_IO_FLUSHER")]
	public const int PR_SET_IO_FLUSHER;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_KEEPCAPS")]
	public const int PR_SET_KEEPCAPS;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM")]
	public const int PR_SET_MM;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_ARG_END")]
	public const int PR_SET_MM_ARG_END;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_ARG_START")]
	public const int PR_SET_MM_ARG_START;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_AUXV")]
	public const int PR_SET_MM_AUXV;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_BRK")]
	public const int PR_SET_MM_BRK;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_END_CODE")]
	public const int PR_SET_MM_END_CODE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_END_DATA")]
	public const int PR_SET_MM_END_DATA;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_ENV_END")]
	public const int PR_SET_MM_ENV_END;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_ENV_START")]
	public const int PR_SET_MM_ENV_START;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_EXE_FILE")]
	public const int PR_SET_MM_EXE_FILE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_MAP")]
	public const int PR_SET_MM_MAP;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_MAP_SIZE")]
	public const int PR_SET_MM_MAP_SIZE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_START_BRK")]
	public const int PR_SET_MM_START_BRK;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_START_CODE")]
	public const int PR_SET_MM_START_CODE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_START_DATA")]
	public const int PR_SET_MM_START_DATA;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_MM_START_STACK")]
	public const int PR_SET_MM_START_STACK;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_NO_NEW_PRIVS")]
	public const int PR_SET_NO_NEW_PRIVS;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_PDEATHSIG")]
	public const int PR_SET_PDEATHSIG;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_PTRACER")]
	public const int PR_SET_PTRACER;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_SECCOMP")]
	public const int PR_SET_SECCOMP;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_SECUREBITS")]
	public const int PR_SET_SECUREBITS;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_SPECULATION_CTRL")]
	public const int PR_SET_SPECULATION_CTRL;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_TAGGED_ADDR_CTRL")]
	public const int PR_SET_TAGGED_ADDR_CTRL;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_THP_DISABLE")]
	public const int PR_SET_THP_DISABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_TIMERSLACK")]
	public const int PR_SET_TIMERSLACK;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_TIMING")]
	public const int PR_SET_TIMING;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_TSC")]
	public const int PR_SET_TSC;
	[CCode (cheader_filename = "linux.h", cname = "PR_SET_UNALIGN")]
	public const int PR_SET_UNALIGN;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_DISABLE")]
	public const int PR_SPEC_DISABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_DISABLE_NOEXEC")]
	public const int PR_SPEC_DISABLE_NOEXEC;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_ENABLE")]
	public const int PR_SPEC_ENABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_FORCE_DISABLE")]
	public const int PR_SPEC_FORCE_DISABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_INDIRECT_BRANCH")]
	public const int PR_SPEC_INDIRECT_BRANCH;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_NOT_AFFECTED")]
	public const int PR_SPEC_NOT_AFFECTED;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_PRCTL")]
	public const int PR_SPEC_PRCTL;
	[CCode (cheader_filename = "linux.h", cname = "PR_SPEC_STORE_BYPASS")]
	public const int PR_SPEC_STORE_BYPASS;
	[CCode (cheader_filename = "linux.h", cname = "PR_SVE_GET_VL")]
	public const int PR_SVE_GET_VL;
	[CCode (cheader_filename = "linux.h", cname = "PR_SVE_SET_VL")]
	public const int PR_SVE_SET_VL;
	[CCode (cheader_filename = "linux.h", cname = "PR_SVE_SET_VL_ONEXEC")]
	public const int PR_SVE_SET_VL_ONEXEC;
	[CCode (cheader_filename = "linux.h", cname = "PR_SVE_VL_INHERIT")]
	public const int PR_SVE_VL_INHERIT;
	[CCode (cheader_filename = "linux.h", cname = "PR_SVE_VL_LEN_MASK")]
	public const int PR_SVE_VL_LEN_MASK;
	[CCode (cheader_filename = "linux.h", cname = "PR_TAGGED_ADDR_ENABLE")]
	public const int PR_TAGGED_ADDR_ENABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_TASK_PERF_EVENTS_DISABLE")]
	public const int PR_TASK_PERF_EVENTS_DISABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_TASK_PERF_EVENTS_ENABLE")]
	public const int PR_TASK_PERF_EVENTS_ENABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_TIMING_STATISTICAL")]
	public const int PR_TIMING_STATISTICAL;
	[CCode (cheader_filename = "linux.h", cname = "PR_TSC_ENABLE")]
	public const int PR_TSC_ENABLE;
	[CCode (cheader_filename = "linux.h", cname = "PR_TSC_SIGSEGV")]
	public const int PR_TSC_SIGSEGV;
	[CCode (cheader_filename = "linux.h", cname = "PR_UNALIGN_NOPRINT")]
	public const int PR_UNALIGN_NOPRINT;
	[CCode (cheader_filename = "linux.h", cname = "PR_UNALIGN_SIGBUS")]
	public const int PR_UNALIGN_SIGBUS;
	[CCode (cheader_filename = "linux.h", cname = "REG_SYSCALL")]
	public const int REG_SYSCALL;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_ADDFD_FLAG_SETFD")]
	public const int SECCOMP_ADDFD_FLAG_SETFD;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_FILTER_FLAG_LOG")]
	public const int SECCOMP_FILTER_FLAG_LOG;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_FILTER_FLAG_NEW_LISTENER")]
	public const int SECCOMP_FILTER_FLAG_NEW_LISTENER;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_FILTER_FLAG_SPEC_ALLOW")]
	public const int SECCOMP_FILTER_FLAG_SPEC_ALLOW;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_FILTER_FLAG_TSYNC")]
	public const int SECCOMP_FILTER_FLAG_TSYNC;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_FILTER_FLAG_TSYNC_ESRCH")]
	public const int SECCOMP_FILTER_FLAG_TSYNC_ESRCH;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_GET_ACTION_AVAIL")]
	public const int SECCOMP_GET_ACTION_AVAIL;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_GET_NOTIF_SIZES")]
	public const int SECCOMP_GET_NOTIF_SIZES;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_IOC_MAGIC")]
	public const int SECCOMP_IOC_MAGIC;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_MODE_DISABLED")]
	public const int SECCOMP_MODE_DISABLED;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_MODE_FILTER")]
	public const int SECCOMP_MODE_FILTER;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_MODE_STRICT")]
	public const int SECCOMP_MODE_STRICT;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_ACTION")]
	public const int SECCOMP_RET_ACTION;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_ACTION_FULL")]
	public const int SECCOMP_RET_ACTION_FULL;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_ALLOW")]
	public const int SECCOMP_RET_ALLOW;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_DATA")]
	public const int SECCOMP_RET_DATA;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_ERRNO")]
	public const int SECCOMP_RET_ERRNO;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_KILL")]
	public const int SECCOMP_RET_KILL;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_KILL_PROCESS")]
	public const int SECCOMP_RET_KILL_PROCESS;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_KILL_THREAD")]
	public const int SECCOMP_RET_KILL_THREAD;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_LOG")]
	public const int SECCOMP_RET_LOG;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_TRACE")]
	public const int SECCOMP_RET_TRACE;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_TRAP")]
	public const int SECCOMP_RET_TRAP;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_RET_USER_NOTIF")]
	public const int SECCOMP_RET_USER_NOTIF;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_SET_MODE_FILTER")]
	public const int SECCOMP_SET_MODE_FILTER;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_SET_MODE_STRICT")]
	public const int SECCOMP_SET_MODE_STRICT;
	[CCode (cheader_filename = "linux.h", cname = "SECCOMP_USER_NOTIF_FLAG_CONTINUE")]
	public const int SECCOMP_USER_NOTIF_FLAG_CONTINUE;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_ALU_XOR_X")]
	public const int SKF_AD_ALU_XOR_X;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_CPU")]
	public const int SKF_AD_CPU;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_HATYPE")]
	public const int SKF_AD_HATYPE;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_IFINDEX")]
	public const int SKF_AD_IFINDEX;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_MARK")]
	public const int SKF_AD_MARK;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_MAX")]
	public const int SKF_AD_MAX;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_NLATTR")]
	public const int SKF_AD_NLATTR;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_NLATTR_NEST")]
	public const int SKF_AD_NLATTR_NEST;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_OFF")]
	public const int SKF_AD_OFF;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_PAY_OFFSET")]
	public const int SKF_AD_PAY_OFFSET;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_PKTTYPE")]
	public const int SKF_AD_PKTTYPE;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_PROTOCOL")]
	public const int SKF_AD_PROTOCOL;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_QUEUE")]
	public const int SKF_AD_QUEUE;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_RANDOM")]
	public const int SKF_AD_RANDOM;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_RXHASH")]
	public const int SKF_AD_RXHASH;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_VLAN_TAG")]
	public const int SKF_AD_VLAN_TAG;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_VLAN_TAG_PRESENT")]
	public const int SKF_AD_VLAN_TAG_PRESENT;
	[CCode (cheader_filename = "linux.h", cname = "SKF_AD_VLAN_TPID")]
	public const int SKF_AD_VLAN_TPID;
	[CCode (cheader_filename = "linux.h", cname = "SKF_LL_OFF")]
	public const int SKF_LL_OFF;
	[CCode (cheader_filename = "linux.h", cname = "SKF_NET_OFF")]
	public const int SKF_NET_OFF;
	[CCode (cheader_filename = "linux.h", cname = "SYS_SECCOMP")]
	public const int SYS_SECCOMP;
}
